server:
  port: 8080

spring:
  application:
    name: mohe-spring
  
  datasource:
    url: jdbc:postgresql://postgres:5432/mohe_db
    username: ${DB_USERNAME:mohe_user}
    password: ${DB_PASSWORD:CHANGE_ME}
    driver-class-name: org.postgresql.Driver

  # Flyway configuration
  flyway:
    enabled: false
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
    
  hikari:
    connection-timeout: 20000
    maximum-pool-size: 20
    minimum-idle: 5
    idle-timeout: 300000
    max-lifetime: 1200000
    
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true

  # Email configuration
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS:true}
            required: ${MAIL_SMTP_STARTTLS_REQUIRED:true}
          ssl:
            trust: ${MAIL_SMTP_SSL_TRUST:smtp.gmail.com}
        debug: ${MAIL_DEBUG:false}
    # Fallback for development (MailHog)
    test:
      host: localhost
      port: 1025
      username: 
      password: 
      auth: false
      starttls: false

# JWT Configuration - CRITICAL: Use strong secret key via environment variable
jwt:
  secret: ${JWT_SECRET:CHANGE_TO_STRONG_SECRET_KEY_MINIMUM_64_CHARS}
  access-token-expiration: 3600000 # 1 hour
  refresh-token-expiration: 2592000000 # 30 days

# Weather API Configuration
weather:
  openweathermap:
    api-key: ${OPENWEATHERMAP_API_KEY:}
    
# External API Configuration
naver:
  place:
    clientId: ${NAVER_CLIENT_ID:}
    clientSecret: ${NAVER_CLIENT_SECRET:}

google:
  places:
    apiKey: ${GOOGLE_PLACES_API_KEY:}

# Gemini API Configuration for image generation - CRITICAL: Keep API key secret
app:
  gemini:
    api-key: ${GEMINI_API_KEY:}
    base-url: ${GEMINI_BASE_URL:https://generativelanguage.googleapis.com/v1beta}

# LLM Configuration
llm:
  is-open-ai-active: ${IS_OPENAI_ACTIVE:true}
  openai:
    api-key: ${OPENAI_API_KEY:}
    model: ${OPENAI_MODEL:gpt-3.5-turbo}
  ollama:
    base-url: ${OLLAMA_BASE_URL:http://192.168.219.127:11434}
    model: ${OLLAMA_MODEL:llama3}

# Recommendation and similarity weights
mohe:
  recommendation:
    topK: ${MOHE_TOP_K:100}
    minPlacesThreshold: ${MOHE_MIN_PLACES_THRESHOLD:50}
  weight:
    jaccard: ${MOHE_WEIGHT_JACCARD:0.7}
    cosine: ${MOHE_WEIGHT_COSINE:0.3}
    mbtiBoost: ${MOHE_WEIGHT_MBTI_BOOST:0.3}
    popularityPenalty: ${MOHE_WEIGHT_POPULARITY_PENALTY:0.1}
    sameMbti: ${MOHE_WEIGHT_SAME_MBTI:2.0}
    diffMbti: ${MOHE_WEIGHT_DIFF_MBTI:1.0}
  timeDecay:
    tauDays: ${MOHE_TIME_DECAY_TAU_DAYS:30}
  mbtiSpecific:
    enabled: ${MOHE_MBTI_SPECIFIC_ENABLED:false}
  diversity:
    enabled: ${MOHE_DIVERSITY_ENABLED:true}
  similarity:
    scheduling:
      enabled: ${MOHE_SIMILARITY_SCHEDULING_ENABLED:true}
      cron: ${MOHE_SIMILARITY_CRON:0 0 */4 * * ?}  # Every 4 hours
    topk:
      refresh:
        cron: ${MOHE_SIMILARITY_TOPK_CRON:0 */30 * * * ?}  # Every 30 minutes
  cleanup:
    cron: ${MOHE_CLEANUP_CRON:0 0 2 * * ?}  # Daily at 2 AM

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: alpha
    tagsSorter: alpha
    displayRequestDuration: true
    showExtensions: true
    showCommonExtensions: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

logging:
  level:
    com.mohe.spring: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/mohe_db

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/mohe_db